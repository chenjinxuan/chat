// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user_center.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AuthArgs struct {
	BaseReq              *BaseReq `protobuf:"bytes,1,opt,name=base_req,json=baseReq,proto3" json:"base_req,omitempty"`
	UserId               int64    `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Token                string   `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthArgs) Reset()         { *m = AuthArgs{} }
func (m *AuthArgs) String() string { return proto.CompactTextString(m) }
func (*AuthArgs) ProtoMessage()    {}
func (*AuthArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_99b116ca098c6071, []int{0}
}

func (m *AuthArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthArgs.Unmarshal(m, b)
}
func (m *AuthArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthArgs.Marshal(b, m, deterministic)
}
func (m *AuthArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthArgs.Merge(m, src)
}
func (m *AuthArgs) XXX_Size() int {
	return xxx_messageInfo_AuthArgs.Size(m)
}
func (m *AuthArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthArgs.DiscardUnknown(m)
}

var xxx_messageInfo_AuthArgs proto.InternalMessageInfo

func (m *AuthArgs) GetBaseReq() *BaseReq {
	if m != nil {
		return m.BaseReq
	}
	return nil
}

func (m *AuthArgs) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *AuthArgs) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type AuthRes struct {
	Ret                  int32    `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthRes) Reset()         { *m = AuthRes{} }
func (m *AuthRes) String() string { return proto.CompactTextString(m) }
func (*AuthRes) ProtoMessage()    {}
func (*AuthRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_99b116ca098c6071, []int{1}
}

func (m *AuthRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthRes.Unmarshal(m, b)
}
func (m *AuthRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthRes.Marshal(b, m, deterministic)
}
func (m *AuthRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthRes.Merge(m, src)
}
func (m *AuthRes) XXX_Size() int {
	return xxx_messageInfo_AuthRes.Size(m)
}
func (m *AuthRes) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthRes.DiscardUnknown(m)
}

var xxx_messageInfo_AuthRes proto.InternalMessageInfo

func (m *AuthRes) GetRet() int32 {
	if m != nil {
		return m.Ret
	}
	return 0
}

func (m *AuthRes) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*AuthArgs)(nil), "proto.AuthArgs")
	proto.RegisterType((*AuthRes)(nil), "proto.AuthRes")
}

func init() { proto.RegisterFile("user_center.proto", fileDescriptor_99b116ca098c6071) }

var fileDescriptor_99b116ca098c6071 = []byte{
	// 215 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8e, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0x8d, 0x21, 0x4d, 0x33, 0x85, 0x6a, 0x17, 0xc1, 0xd0, 0x53, 0xc8, 0x29, 0x1e, 0xcc,
	0xa1, 0x7e, 0x82, 0x9a, 0x93, 0xd7, 0x11, 0xcf, 0x25, 0x7f, 0x1e, 0x69, 0x29, 0x26, 0x76, 0x66,
	0xeb, 0xe7, 0x97, 0xdd, 0x55, 0xf0, 0xb4, 0xef, 0xfd, 0x58, 0x7e, 0xf3, 0x68, 0x73, 0x55, 0xc8,
	0xa1, 0xc7, 0x64, 0x21, 0xf5, 0x97, 0xcc, 0x76, 0x36, 0x89, 0x7f, 0xb6, 0xab, 0x76, 0xc4, 0x64,
	0x03, 0x2b, 0x07, 0x5a, 0xee, 0xaf, 0xf6, 0xb8, 0x97, 0x51, 0xcd, 0x13, 0x2d, 0xbb, 0x56, 0x71,
	0x10, 0x5c, 0xf2, 0xa8, 0x88, 0xaa, 0xd5, 0x6e, 0x1d, 0x7e, 0xd5, 0xaf, 0xad, 0x82, 0x71, 0xe1,
	0xb4, 0x0b, 0xc1, 0x3c, 0x52, 0xea, 0xfd, 0xa7, 0x21, 0xbf, 0x2d, 0xa2, 0x2a, 0xe6, 0x85, 0xab,
	0x6f, 0x83, 0x79, 0xa0, 0xc4, 0xce, 0x67, 0x4c, 0x79, 0x5c, 0x44, 0x55, 0xc6, 0xa1, 0x94, 0xcf,
	0x94, 0xba, 0x2b, 0x0c, 0x35, 0xf7, 0x14, 0x0b, 0xac, 0xf7, 0x27, 0xec, 0xa2, 0x23, 0x9f, 0x3a,
	0x7a, 0x4f, 0xc6, 0x2e, 0xee, 0x1a, 0xda, 0x7c, 0x28, 0xa4, 0xf1, 0xe3, 0xdf, 0x21, 0xdf, 0xa7,
	0x1e, 0xa6, 0xa6, 0xac, 0x39, 0xa2, 0x3f, 0x3b, 0x91, 0xb9, 0xfb, 0x1d, 0xf6, 0xb7, 0x7d, 0xbb,
	0xfe, 0x07, 0x18, 0x5a, 0xde, 0x74, 0x0b, 0x0f, 0x5e, 0x7e, 0x02, 0x00, 0x00, 0xff, 0xff, 0xb0,
	0x56, 0x1d, 0x5f, 0x09, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserCenterServiceClient is the client API for UserCenterService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserCenterServiceClient interface {
	// 校验授权
	CheckAuth(ctx context.Context, in *AuthArgs, opts ...grpc.CallOption) (*AuthRes, error)
}

type userCenterServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserCenterServiceClient(cc *grpc.ClientConn) UserCenterServiceClient {
	return &userCenterServiceClient{cc}
}

func (c *userCenterServiceClient) CheckAuth(ctx context.Context, in *AuthArgs, opts ...grpc.CallOption) (*AuthRes, error) {
	out := new(AuthRes)
	err := c.cc.Invoke(ctx, "/proto.UserCenterService/CheckAuth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserCenterServiceServer is the server API for UserCenterService service.
type UserCenterServiceServer interface {
	// 校验授权
	CheckAuth(context.Context, *AuthArgs) (*AuthRes, error)
}

func RegisterUserCenterServiceServer(s *grpc.Server, srv UserCenterServiceServer) {
	s.RegisterService(&_UserCenterService_serviceDesc, srv)
}

func _UserCenterService_CheckAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserCenterServiceServer).CheckAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.UserCenterService/CheckAuth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserCenterServiceServer).CheckAuth(ctx, req.(*AuthArgs))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserCenterService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.UserCenterService",
	HandlerType: (*UserCenterServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CheckAuth",
			Handler:    _UserCenterService_CheckAuth_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user_center.proto",
}
